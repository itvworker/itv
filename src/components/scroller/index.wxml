
<wxs module="touch" src="./index.wxs"></wxs>
<view class="itv-scroll"
    bindtouchstart="{{touch.touchstart}}" 
    bindtouchmove="{{touch.touchmove}}" 
    bindtouchend="{{touch.touchend}}" 
    bindtouchcancel="{{touch.touchend}}"
    init="{{initStatus}}"
    change:init="{{touch.init}}"
    data-topBounce="{{topBounce}}"
    data-bottomBounce="{{bottomBounce}}"
    data-leftBounce="{{leftBounce}}"
    data-rightBounce="{{rightBounce}}"
    data-pullDown = "{{pullDown}}"
    data-pullDis = "{{pullDis}}"
    data-pattern = "{{pattern}}"
    data-percent = "{{percent}}"
    data-speed="{{speed}}"
    data-showScrollBar="{{showScrollBar}}"
    data-refreshLayerColor="{{refreshLayerColor}}"       
    data-loadingLayerColor="{{loadingLayerColor}}"
    data-maxSpeed="{{maxSpeed}}"
    data-isMore="{{isMore}}"
    data-minScrollHeihgt="{{minScrollHeihgt}}"
    data-divisor="{{divisor}}"
>

    <slot name="other"/>
    <!-- 滚动的内容 -->
    <view class="itv-scroll-content"  >
        <view class="scroller-bar" v-if="showScrollBar" v-show="!hideBarY && maxY > 2 && (cacheDirection === 'vertical' || pattern === 'freedom' )" >
            <view class="scroll-indoor" ref="barY" :style="{'height':scrollbarHeight+'%','transform':`translate3d(0,${scrollbarY}px,0)`,'WebkitTransform':`translate3d(0,${scrollbarY}px,0)`}"></view>
        </view>
        <view class="scroller-barx" v-if="showScrollBar " v-show="!hideBarY && maxX > 2 && (cacheDirection === 'horizontal' || pattern === 'freedom')" >
            <view class="scroll-indoor" ref="barX" :style="{'width':scrollbarWidth+'%','transform':`translate3d(${scrollbarX}px,0,0)`,'WebkitTransform':`translate3d(${scrollbarX}px,0,0)`}"></view>
        </view>
        <view class="itv-scroll-touch" ref="scroller"  :style="{'transform':`translate3d(-${x},-${y},0)`,'WebkitTransform':`translate3d(-${x},-${y},0)`}">
            <view class="pull-top">
                 <view class="spinner-holder">
                 <svg viewBox="0 0 63.657 63.657" style="enable-background:new 0 0 63.657 63.657;" xml:space="preserve" width="512px" height="512px">
                    <g>
                        <g>
                            <g>
                                <g>
                                    <polygon points="31.891,63.657 0.012,35.835 2.642,32.821 31.886,58.343 61.009,32.824 63.645,35.832" :fill="fillColor"/>
                                </g>
                            </g>
                            <g>
                                <g>
                                    <rect x="29.827" width="4" height="60" :fill="fillColor"/>
                                </g>
                            </g>
                        </g>
                    
                    </g>
                </svg>
                        <arrow
                            class="arrow"
                            :class="{'active': status}"
                            v-if="!isTriggerPullDown"
                            :fillColor="refreshLayerColor"
                        ></arrow>
                            <spinner v-show="isTriggerPullDown" :style="{fill: refreshLayerColor, stroke: refreshLayerColor}"></spinner>
                        
                        <view
                            class="text"
                            :style="{color: refreshLayerColor}"
                            v-text="text"
                        ></view>
                    </view>
            </view> 
            <view class="itv-scroller-msg">
                <image src="./svg/spinner.svg"  />
                
                <slot/>
            </view>  
                
         <svg class="spinner" viewBox="0 0 64 64"><g stroke-width="4" stroke-linecap="round"><line y1="17" y2="29" transform="translate(32,32) rotate(180)"><animate attributeName="stroke-opacity" dur="750ms" values="1;.85;.7;.65;.55;.45;.35;.25;.15;.1;0;1" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(210)"><animate attributeName="stroke-opacity" dur="750ms" values="0;1;.85;.7;.65;.55;.45;.35;.25;.15;.1;0" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(240)"><animate attributeName="stroke-opacity" dur="750ms" values=".1;0;1;.85;.7;.65;.55;.45;.35;.25;.15;.1" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(270)"><animate attributeName="stroke-opacity" dur="750ms" values=".15;.1;0;1;.85;.7;.65;.55;.45;.35;.25;.15" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(300)"><animate attributeName="stroke-opacity" dur="750ms" values=".25;.15;.1;0;1;.85;.7;.65;.55;.45;.35;.25" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(330)"><animate attributeName="stroke-opacity" dur="750ms" values=".35;.25;.15;.1;0;1;.85;.7;.65;.55;.45;.35" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(0)"><animate attributeName="stroke-opacity" dur="750ms" values=".45;.35;.25;.15;.1;0;1;.85;.7;.65;.55;.45" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(30)"><animate attributeName="stroke-opacity" dur="750ms" values=".55;.45;.35;.25;.15;.1;0;1;.85;.7;.65;.55" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(60)"><animate attributeName="stroke-opacity" dur="750ms" values=".65;.55;.45;.35;.25;.15;.1;0;1;.85;.7;.65" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(90)"><animate attributeName="stroke-opacity" dur="750ms" values=".7;.65;.55;.45;.35;.25;.15;.1;0;1;.85;.7" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(120)"><animate attributeName="stroke-opacity" dur="750ms" values=".85;.7;.65;.55;.45;.35;.25;.15;.1;0;1;.85" repeatCount="indefinite"></animate></line><line y1="17" y2="29" transform="translate(32,32) rotate(150)"><animate attributeName="stroke-opacity" dur="750ms" values="1;.85;.7;.65;.55;.45;.35;.25;.15;.1;0;1" repeatCount="indefinite"></animate></line></g></svg>
            <view class="itv-scroller-more" v-show='isMore && moreStatus!=="loadingStop"'>
                <spinner v-show="moreStatus !== 'none'" class="itv-scroller-more-icon" :style="{fill: refreshLayerColor, stroke: refreshLayerColor}" />
                <span v-show="moreStatus === 'none'">{{noDataText}}</span>
                <span v-show="moreStatus !== 'none'">{{loadingText}}</span>
            </view>  
        </view>
    </view>    
</view>
