(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{1051:function(t,n,d){"use strict";function e(t,n){for(var d=0;d<n.length;d++){var e=n[d];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=function(){function t(n){!function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}(this,t),this.doc=n}var n,d,o;return n=t,(d=[{key:"getHtml",value:function(){return this.doc=this.doc.replace(/<p>[\S\s]+?<\/p>/gi,(function(t){if(-1===t.indexOf("$#"))return t;var n=t.replace("<p>","").replace("</p>","");return n=n.replace(/\$#[\/\.a-zA-z=_\-"'&;#\d]+/gi,(function(t){var n=t.substr(2,t.length).split("."),d="<";return n.length<=1?d+=n[0]+">":(d+=n[0]+" ",n.splice(0,1),n.forEach((function(t,n){var e=t.split("=");e.length>=2?d+="".concat(e[0],'="').concat(e[1].replace(/_/gi," "),'"'):d+=t.replace(/_/gi," ")+" "})),d+=">")}))})),this.doc}},{key:"rmEmptyArr",value:function(t){var n=[];return t.forEach((function(t,d){t.length>3&&n.push(t)})),n}}])&&e(n.prototype,d),o&&e(n,o),t}();n.default=o},1053:function(t,n,d){"use strict";d.r(n);var e=d(1054),o=d.n(e);for(var r in e)"default"!==r&&function(t){d.d(n,t,(function(){return e[t]}))}(r);n.default=o.a},1054:function(t,n,d){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var e=r(d(1260)),o=r(d(1051));function r(t){return t&&t.__esModule?t:{default:t}}var i={computed:{doc:function(){var t=this.$route.params.type;return new o.default(e.default[t]).getHtml()},url:function(){var t=this.$route.params.type;return"/#/demo/".concat(t)}},updated:function(){this.hljs()},mounted:function(){this.hljs()}};n.default=i},1055:function(t,n,d){},1260:function(t,n,d){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var e=h(d(1261)),o=h(d(1262)),r=h(d(1263)),i=h(d(1264)),a=h(d(1265)),l=h(d(1266)),u=h(d(1267)),s=h(d(1268));function h(t){return t&&t.__esModule?t:{default:t}}var c={toast:e.default,cliper:o.default,elevator:r.default,slider:i.default,picker:a.default,slideout:l.default,miniSwiper:u.default,schedule:s.default};n.default=c},1261:function(t,n){t.exports='<h1 id="toast">Toast</h1>\n<h2 id="安装">安装</h2>\n<hr>\n<p>$#div.class=doc-tab_doc-contet.id=page\n    $#div.class=doc-tab-group\n        $#div.class=tab-item-btn_active 全局注册 $#/div\n    $#/div\n    $#div.class=doc-tab-content\n$#div.class=doc-tab-item</p>\n<pre><code>import Vue from &#39;vue&#39;;\nimport toast from &#39;itv/packages/toast/index&#39;\nVue.use(toast)\n</code></pre><pre><code>//显示\nthis.$itv.toast.show({\n    text: &#39;加载中…&#39;\n    })\n\n//显示文本\nthis.$itv.toast.text(&#39;小姐姐你好&#39;, &#39;middle&#39;)\n\n//关闭\nthis.$itv.toast.hide()\n\n// 状态\nthis.$itv.toast.state()</code></pre><p>$#/div\n$#/div\n$#/div</p>\n<blockquote>\n<p>该组件仅支持全局注册，以插件的方式进行调用</p>\n</blockquote>\n<h3 id="属性">属性</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>text</td>\n<td>string</td>\n<td></td>\n<td>暂时只支持String</td>\n<td></td>\n</tr>\n<tr>\n<td>position</td>\n<td>string</td>\n<td>middle</td>\n<td>显示位置，可选值 default, top, middle, bottom</td>\n<td></td>\n</tr>\n<tr>\n<td>time</td>\n<td>number</td>\n<td>2000</td>\n<td>显示时间</td>\n<td>--</td>\n</tr>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>text</td>\n<td>类型，可选值 success, warn, cancel, text</td>\n<td></td>\n</tr>\n</tbody></table>\n'},1262:function(t,n){t.exports='<h1 id="cliper">Cliper</h1>\n<ul>\n<li>可以导入样式替换当前组件样式</li>\n</ul>\n<h2 id="安装">安装</h2>\n<pre><code class="language-js">//全局安装\nimport vue from &quot;vue&quot;;\nimport { Cliper } from &quot;itv-ui&quot;;\nvue.use(Cliper);\n\n//局部安装\nimport { Cliper } from &quot;itv-ui&quot;;\nexport default {\n  components: {\n​    Cliper\n  }\n}\n</code></pre>\n<h3 id="属性">属性</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>width</td>\n<td>number</td>\n<td>200</td>\n<td>裁剪的宽度</td>\n</tr>\n<tr>\n<td>height</td>\n<td>number</td>\n<td>200</td>\n<td>裁剪的高度</td>\n</tr>\n<tr>\n<td>clipType</td>\n<td>string</td>\n<td>orthogon</td>\n<td>可选值 orthogon(矩形裁前), circle(圆形裁剪) width与height必须设置为同一数值;</td>\n</tr>\n<tr>\n<td>outputFormat</td>\n<td>string</td>\n<td>输出图片类型</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id="方法">方法</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>insertImage</td>\n<td>value图片路径</td>\n<td>参数是图片url</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>--</td>\n<td>重置操作的图片</td>\n</tr>\n<tr>\n<td>done</td>\n<td>--</td>\n<td>返回base64图片</td>\n</tr>\n</tbody></table>\n'},1263:function(t,n){t.exports='<h1 id="elevator-电梯楼层组件">Elevator 电梯楼层组件</h1>\n<h2 id="安装">安装</h2>\n<hr>\n<p>$#div.class=doc-tab_doc-contet.id=page\n    $#div.class=doc-tab-group\n        $#div.class=tab-item-btn_active 全局注册 $#/div\n        $#div.class=tab-item-btn 局部注册 $#/div\n    $#/div\n    $#div.class=doc-tab-content\n$#div.class=doc-tab-item</p>\n<pre><code>// 在入口处引入\nimport Vue from &#39;vue&#39;;\nimport ItvElevator from &#39;itv/packages/elevator&#39;\nVue.use(tItvElevator)\n</code></pre><p>$#/div\n$#div.class=doc-tab-item</p>\n<pre><code>import ItvElevator from &#39;itv/packages/elevator&#39;\nexport default {\n  components: {\n    ItvElevator\n  }\n}\n</code></pre><p>$#/div\n$#/div\n$#/div</p>\n<pre><code class="language-html">&lt;itv-elevator\n        :dataArray=&quot;dataList&quot;  \n        :showIndicator=&quot;true&quot;\n        :navHeight=&quot;40&quot;\n        :initIndex=&quot;0&quot;\n        :hiddenTime=&#39;500&#39;\n        @clickNav=&quot;clickNav&quot;\n        @clickList=&quot;clickList&quot;\n        &gt;    \n&lt;/itv-elevator&gt;</code></pre>\n<p>数据类型</p>\n<pre><code class="language-js">dataList:[\n    {\n      title:&quot;A&quot;,\n      list:[//可以为空数组\n        {\n          name:&#39;安其拉&#39;,\n          id:&#39;a1&#39;//id字段可以没有\n        },\n        {\n          name:&#39;安琪&#39;,\n          id:&#39;a2&#39;\n        }\n      ]\n    }    \n]</code></pre>\n<h2 id="属性">属性</h2>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>dataArray</td>\n<td>Array</td>\n<td>[]</td>\n<td>渲染楼层数据，为必填项</td>\n<td>--</td>\n</tr>\n<tr>\n<td>showIndicator</td>\n<td>Boolean</td>\n<td>--</td>\n<td>是否显示索引值提示符</td>\n<td>--</td>\n</tr>\n<tr>\n<td>hiddenTime</td>\n<td>Number</td>\n<td>500</td>\n<td>索引值提示符显示的时间，单位ms</td>\n<td>--</td>\n</tr>\n<tr>\n<td>navHeight</td>\n<td>Number</td>\n<td>500</td>\n<td>索引栏每个索引区域的高度，单位px ≈</td>\n<td>--</td>\n</tr>\n<tr>\n<td>initIndex</td>\n<td>Number</td>\n<td>0</td>\n<td>进入页面后，当前定位到的索引值</td>\n<td>--</td>\n</tr>\n</tbody></table>\n<h2 id="事件">事件</h2>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>clickNav</td>\n<td>点击/离开索引栏时的回调函数</td>\n<td>返回点击的索引值和title</td>\n</tr>\n<tr>\n<td>clickList</td>\n<td>点击左侧列表时的回调函数</td>\n<td>返回点击的对象数据和所在区域的对象数据</td>\n</tr>\n</tbody></table>\n'},1264:function(t,n){t.exports='<h1 id="slider-滑块">Slider 滑块</h1>\n<p>滑动输入器，用于在数值区间/自定义区间内进行选择。</p>\n<h2 id="基本用法">基本用法</h2>\n<pre><code class="language-html">&lt;nut-slider \n   v-model=&quot;val1&quot; \n   :range=&quot;[0,10]&quot;\n&gt;\n&lt;/nut-slider&gt;</code></pre>\n<p>拖动时展示标签</p>\n<pre><code class="language-html">&lt;nut-slider \n   v-model=&quot;val2&quot; \n   :range=&quot;[0,100]&quot; \n   :showLabel=&quot;true&quot;\n&gt;\n&lt;/nut-slider&gt;</code></pre>\n<p>一直展示标签</p>\n<pre><code class="language-html">&lt;nut-slider \n   v-model=&quot;val3&quot; \n   :range=&quot;[0,100]&quot; \n   :showLabel=&quot;true&quot; \n   :showLabelAlways=&quot;true&quot;\n&gt;\n&lt;/nut-slider&gt;</code></pre>\n<p>两端显式可选取范围</p>\n<pre><code class="language-html">&lt;nut-slider \n   v-model=&quot;val4&quot; \n   :range=&quot;[-50,50]&quot; \n   :showLabel=&quot;true&quot; \n   :showRangeTxt=&quot;true&quot;\n&gt;\n&lt;/nut-slider&gt;</code></pre>\n<p>设置分段数（stage=20）</p>\n<pre><code class="language-html">&lt;nut-slider \n   v-model=&quot;val5&quot; \n   :range=&quot;[0,100]&quot; \n   :showLabel=&quot;true&quot; \n   :showRangeTxt=&quot;true&quot; \n   :stage=&quot;5&quot;\n&gt;\n&lt;/nut-slider&gt;</code></pre>\n<h2 id="自定义class">自定义class</h2>\n<pre><code class="language-html">&lt;nut-slider \n   class=&quot;my-slider&quot; \n   v-model=&quot;val6&quot; \n   :range=&quot;[0,100]&quot;\n&gt;\n&lt;/nut-slider&gt;</code></pre>\n<h2 id="prop">Prop</h2>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>滑块选定的值，可以使用 <strong>v-model</strong> 双向绑定数据。</td>\n<td>Number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>showLabel</td>\n<td>拖动时是否展示标签</td>\n<td>Boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>showLabelAlways</td>\n<td>是否一直展示标签</td>\n<td>Boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>showRangeTxt</td>\n<td>两端是否展示可选取范围</td>\n<td>Boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>stage</td>\n<td>分段数</td>\n<td>Number/String</td>\n<td>-</td>\n</tr>\n</tbody></table>\n'},1265:function(t,n){t.exports='<h1 id="picker">Picker</h1>\n<p>Picker是一个移动端日历以及时间弹框选择器</p>\n<ul>\n<li>可以导入样式替换当前组件样式</li>\n</ul>\n<h2 id="安装">安装</h2>\n<pre><code class="language-js">//全局安装\nimport vue from &quot;vue&quot;;\nimport { picker } from &quot;itv-ui&quot;;\nvue.use(calendarTime);\n\n//局部安装\nimport { picker } from &quot;itv-ui&quot;;\nexport default {\n  components: {\n    picker\n  }\n}\n</code></pre>\n<h2 id="属性">属性</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>listData</td>\n<td>选项</td>\n<td><font color="#2caf4f">array</font></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>defaultValueData</td>\n<td>默认选中值</td>\n<td><font color="#2caf4f">array</font></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>rows</td>\n<td>滚动行数，只支持<font color="red">5</font>或<font color="red">7</font>行</td>\n<td><font color="#2caf4f">string</font></td>\n<td>5</td>\n</tr>\n<tr>\n<td>isLoop</td>\n<td>是否循环滚动<font color="red">当选项超过行数一半才有效</font></td>\n<td><font color="#2caf4f">Boolean</font></td>\n<td>false</td>\n</tr>\n</tbody></table>\n<h3 id="listdata">listData</h3>\n<p>listData是一个数组， 也可以是一个对像数组</p>\n<h2 id="事件">事件</h2>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>说明</th>\n<th>返回参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>choose</td>\n<td>当选项变化时</td>\n<td>index: 列， value: 当前选中的项</td>\n</tr>\n</tbody></table>\n'},1266:function(t,n){t.exports='<h1 id="slideout">slideout</h1>\n<p>slideout 是一个可以左滑动的按组件</p>\n<h2 id="安装">安装</h2>\n<hr>\n<p>$#div.class=doc-tab_doc-contet.id=page\n    $#div.class=doc-tab-group\n        $#div.class=tab-item-btn_active 全局注册 $#/div\n        $#div.class=tab-item-btn 局部注册 $#/div\n    $#/div\n    $#div.class=doc-tab-content\n$#div.class=doc-tab-item</p>\n<pre><code class="language-javascript">// 在入口处引入\nimport { slideout, slideitem, slidebutton } from &quot;itv&quot;\n\nVue.use(slideout)\nVue.use(slideitem)\nVue.use(slidebutton)\n</code></pre>\n<p>$#/div\n$#div.class=doc-tab-item</p>\n<pre><code class="language-javascript">\nimport { slideout, slideitem, slidebutton } from &quot;itv&quot;\nexport default {\n  components: {\n    slideout, \n    slideitem, \n    slidebutton\n  }\n}\n</code></pre>\n<p>$#/div\n$#/div\n$#/div</p>\n<pre><code class="language-html">&lt;template lang=&quot;html&quot;&gt;\n    &lt;itv-container&gt;\n        &lt;itv-header&gt;Cliper&lt;/itv-header&gt;\n        &lt;itv-main&gt;\n          &lt;div class=&quot;section-box&quot;&gt;\n            &lt;img :src=&quot;url&quot; :onerror=&quot;defaultImg&quot; /&gt;\n          &lt;/div&gt;\n\n            &lt;div class=&quot;itv-demo-btn btn-content&quot; &gt;\n                方形截剪\n                &lt;input type=&quot;file&quot; class=&quot;select-pic&quot; accept=&quot;image/*&quot; @change=&quot;open($event,&#39;square&#39;)&quot;&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;itv-demo-btn btn-content&quot;&gt;\n              &lt;input type=&quot;file&quot; class=&quot;select-pic&quot; accept=&quot;image/*&quot; @change=&quot;open($event,&#39;circle&#39;)&quot;&gt;\n                圆形\n            &lt;/div&gt;\n\n            &lt;div class=&quot;flex-rows-box&quot;&gt;\n                &lt;div class=&quot;rows-item&quot;&gt;\n                  &lt;span&gt;宽度：&lt;/span&gt;\n                    &lt;input class=&quot;input-text&quot; type=&quot;number&quot; v-model=&quot;width&quot; /&gt;\n                &lt;/div&gt;\n                &lt;div class=&quot;rows-item&quot;&gt;\n                  &lt;span&gt;高度：&lt;/span&gt;\n                    &lt;input class=&quot;input-text&quot; type=&quot;number&quot; v-model=&quot;height&quot; /&gt;\n                &lt;/div&gt;\n                &lt;div class=&quot;rows-item itv-demo-btn&quot;&gt;\n                  &lt;input type=&quot;file&quot; class=&quot;select-pic&quot; accept=&quot;image/*&quot; @change=&quot;open($event,&#39;orthogon&#39;)&quot;&gt;\n                    自定义\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;input type=&quot;&quot;&gt;\n\n        &lt;/itv-main&gt;\n        &lt;transition name=&quot;itv-slide-top&quot;&gt;\n            &lt;itv-container class=&quot;cliper-main-box&quot; v-show=&quot;toggle&quot;&gt;\n                &lt;itv-header :showArrow=&quot;false&quot;&gt;\n                  &lt;div class=&quot;btn-close&quot; @click=&quot;toggle=false&quot;&gt;关闭&lt;/div&gt;\n                  Cliper截图\n                &lt;/itv-header&gt;\n                &lt;itv-main&gt;\n                    &lt;itv-cliper :width=&quot;w&quot; :height=&quot;h&quot; ref=&quot;cliper&quot; :clipType=&quot;clipType&quot;&gt;&lt;/itv-cliper&gt;\n                &lt;/itv-main&gt;\n                &lt;itv-flex-row&gt;\n                    &lt;div class=&quot;item&quot; @click=&quot;reset&quot;&gt;重置&lt;/div&gt;\n                    &lt;div class=&quot;item&quot;&gt;\n                        选择图片\n                        &lt;input class=&quot;select-img&quot; @change=&quot;open&quot;  type=&quot;file&quot; /&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;item&quot; @click=&quot;done&quot;&gt;\n                        确认\n                    &lt;/div&gt;\n                &lt;/itv-flex-row&gt;\n            &lt;/itv-container&gt;\n        &lt;/transition&gt;\n    &lt;/itv-container&gt;\n\n&lt;/template&gt;\n\n&lt;script&gt;\nimport img from &#39;@/assets/img/header.jpeg&#39;;\nexport default {\n    data() {\n        return {\n            clipType: &#39;square&#39;,\n            url:&#39;&#39;,\n            w:100,\n            h:200,\n            width: 100,\n            height:300,\n            toggle: false\n        }\n      },\n\n    computed: {\n        defaultImg () {\n            return &#39;this.src=&quot;&#39;+ img +&#39;&quot;&#39;\n        }\n    },\n    methods: {\n        reset() {\n            this.$refs.cliper.reset()\n\n        },\n        openToggle(event) {\n            this.toggle = true;\n        },\n        open(event, type) {\n            this.toggle = true;\n            if(type)this.clipType = type;\n            if(type===&quot;orthogon&quot;) {\n              this.w = parseInt(this.width);\n              this.h = parseInt(this.height);\n            }else{\n              this.w =200\n              this.h =200\n            }\n\n            var files = event.target.files || event.dataTransfer.files\n            var reader = new FileReader()\n            reader.readAsDataURL(files[0])\n            reader.onload = e =&gt; {\n                this.$refs.cliper.getImage(e.target.result);\n\n            }\n        },\n        done() {\n            let result = this.$refs.cliper.done();\n            this.url = result;\n            this.toggle = false;\n\n        }\n    }\n}\n&lt;/script&gt;\n\n&lt;style lang=&quot;less&quot;&gt;\n   .section-box {\n     height: 120ipx;\n     margin: 20ipx 0px;\n     text-align: center;\n     img {\n       max-width: 100%;\n       max-height: 100%;\n     }\n   }\n   .input-text{\n      width: 50px;\n      background-color: #eee;\n      padding: 10ipx;\n      border-radius: 2ipx;\n   }\n   .btn-content{\n      margin: 10ipx;\n      position: relative;\n   }\n   .flex-rows-box {\n     padding: 10ipx;\n     .rows-item{\n       display: flex;align-items: center;\n       position: relative;\n     }\n   }\n   .btn-close{\n     position: absolute;\n     right: 0px;\n     height: 44ipx;\n     line-height: 44ipx;\n     padding: 0px 10ipx;\n     font-size: 14ipx;\n   }\n   .cliper-main-box {\n     position: absolute;\n     left: 0px;\n     right: 0px;\n     bottom: 0px;\n     top: 0px;\n   }\n   .item {\n       text-align: center;\n       line-height: 44ipx;\n       font-size: 16ipx;\n       position: relative;\n       height: 100%;\n       overflow: hidden;\n       .select-img{\n           position: absolute;\n           left: 0px;\n           right: 0px;\n           height: 100%;\n           opacity: 0;\n       }\n   }\n   .select-pic {\n     position: absolute;\n     width: 100%;\n     height: 100%;\n     opacity: 0;\n\n   }\n&lt;/style&gt;\n</code></pre>\n<h3 id="属性">属性</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>width</td>\n<td>number</td>\n<td>200</td>\n<td>裁剪的宽度</td>\n<td></td>\n</tr>\n<tr>\n<td>height</td>\n<td>number</td>\n<td>200</td>\n<td>裁剪的高度</td>\n<td></td>\n</tr>\n<tr>\n<td>clipType</td>\n<td>string</td>\n<td>orthogon</td>\n<td>可选值 orthogon(矩形裁前), circle(圆形裁剪) width与height必须设置为同一数值;</td>\n<td></td>\n</tr>\n<tr>\n<td>outputFormat</td>\n<td>string</td>\n<td>png</td>\n<td>输出图片类型</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id="方法">方法</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>参数</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>insertImage</td>\n<td>value图片路径</td>\n<td>参数是图片url</td>\n<td></td>\n</tr>\n<tr>\n<td>reset</td>\n<td>--</td>\n<td>重置操作的图片</td>\n<td></td>\n</tr>\n<tr>\n<td>done</td>\n<td>--</td>\n<td>返回base64图片</td>\n<td></td>\n</tr>\n</tbody></table>\n'},1267:function(t,n){t.exports='<h1 id="itv-swiper">itv-swiper</h1>\n<p>slideout 是一个可以左滑动的按组件</p>\n<h2 id="安装">安装</h2>\n<hr>\n<p>$#div.class=doc-tab_doc-contet.id=page\n    $#div.class=doc-tab-group\n        $#div.class=tab-item-btn_active 全局注册 $#/div\n        $#div.class=tab-item-btn 局部注册 $#/div\n    $#/div\n    $#div.class=doc-tab-content\n$#div.class=doc-tab-item</p>\n<pre><code class="language-javascript">// 在入口处引入\nimport { swiper, swiperItem } from &quot;itv&quot;\n\nVue.use(swiper)\nVue.use(swiperItem)</code></pre>\n<p>$#/div\n$#div.class=doc-tab-item</p>\n<pre><code class="language-javascript">\nimport { swiper, swiperItem } from &quot;itv&quot;\nexport default {\n  components: {\n    swiper,\n    swiperItem \n  }\n}\n</code></pre>\n<p>$#/div\n$#/div\n$#/div</p>\n<pre><code class="language-html">\n</code></pre>\n<h3 id="属性">属性</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>Number</td>\n<td>0</td>\n<td>当前滑动的索引</td>\n<td></td>\n</tr>\n<tr>\n<td>loop</td>\n<td>Boolean</td>\n<td>false</td>\n<td>是否索引</td>\n<td></td>\n</tr>\n<tr>\n<td>direction</td>\n<td>String</td>\n<td>row</td>\n<td>row为横向滑动，column为纵向滑动</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id="方法">方法</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>参数</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>scrollTo</td>\n<td>(index, animate)</td>\n<td>index参数类型Number,滚动到第几张;animate参数类型Boolean,是否要有过渡动画</td>\n<td></td>\n</tr>\n<tr>\n<td>init</td>\n<td>无</td>\n<td>初始化，当内容就变化，或者样式有变化时请使些方法，要初始化为那一屏，请先设置value值</td>\n<td></td>\n</tr>\n<tr>\n<td>### 事件</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>名字</td>\n<td>参数</td>\n<td>说明</td>\n<td>版本要求</td>\n</tr>\n<tr>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>@touchstart</td>\n<td>无</td>\n<td>触屏开始</td>\n<td></td>\n</tr>\n<tr>\n<td>@touchend</td>\n<td>无</td>\n<td>触屏结束</td>\n<td></td>\n</tr>\n<tr>\n<td>@change</td>\n<td>index</td>\n<td>切换是反回切换的索引</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id="插槽">插槽</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>defalut</td>\n<td>切换内容，主要放swpier-item组件和内容</td>\n<td></td>\n</tr>\n<tr>\n<td>dot</td>\n<td>切换内容外的位置</td>\n<td></td>\n</tr>\n</tbody></table>\n'},1268:function(t,n){t.exports='<h1 id="schedule">schedule</h1>\n<p> schedule 是一个日程组件，目前支下拉刷新，上拉加载更改，要实现加载更多可以自己行实现  组件样式单位是使用ipx, 最后好配合<a href="https://www.npmjs.com/package/postcss-u2u">postcss-u2u</a>,要不然只能自己去更改ipx单位，改成你想要的单位</p>\n<h2 id="安装">安装</h2>\n<pre><code class="language-vue">&lt;template&gt;\n    &lt;schedule\n        v-model=&quot;currentDate&quot; \n        :min=&quot;minMonth&quot;   \n        :max=&quot;maxMonth&quot;\n        @bounce=&quot;slideBounce&quot;\n        @refresh=&quot;refresh&quot;   \n    &gt;\n    &lt;/schedule&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport schedule from &#39;./schedule&#39;\nexport default {\n    components: {\n        schedule,\n    },\n    data() {\n        return {\n            currentDate: new Date().getTime(),\n            minMonth:&#39;2019/10&#39;,\n            maxMonth: &#39;2020/12&#39;\n        }\n    },\n    methods: {\n        slideBounce(obj) {\n            let size = obj.width - Math.abs(obj.x);\n            if(Math.abs(size)&gt;40){\n                alert(&#39;已经滑动滑尽头&#39;)\n            }\n        },\n        refresh() {\n\n        }   \n    }\n}\n&lt;script&gt;</code></pre>\n<h3 id="属性">属性</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>类型</th>\n<th>是否必传</th>\n<th>默认值</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>String</td>\n<td>无</td>\n<td>Y</td>\n<td>必传，必须传2020/10/10这样的格式</td>\n<td></td>\n</tr>\n<tr>\n<td>min</td>\n<td>String</td>\n<td>无</td>\n<td>N</td>\n<td>格式2020/10</td>\n<td></td>\n</tr>\n<tr>\n<td>max</td>\n<td>String</td>\n<td>无</td>\n<td>N</td>\n<td>格式2020/12</td>\n<td></td>\n</tr>\n<tr>\n<td>weekText</td>\n<td>Array</td>\n<td>N</td>\n<td>[&quot;日&quot;, ....]</td>\n<td>周日至周六文字</td>\n<td></td>\n</tr>\n<tr>\n<td>monthText</td>\n<td>Array</td>\n<td>N</td>\n<td>[&quot;1月&quot;, ....]</td>\n<td>1月至12月文字</td>\n<td></td>\n</tr>\n<tr>\n<td>toggleStatus</td>\n<td>Number</td>\n<td>N</td>\n<td>1</td>\n<td>只有初始化时才起用作，初始化结束后不起作用，0为日历收起,1为日历展开</td>\n<td></td>\n</tr>\n<tr>\n<td>iconBgColor</td>\n<td>Stirng</td>\n<td>N</td>\n<td>&quot;rgba(200,200,200,1)&quot;</td>\n<td>下拉刷新图标底色,必须为rgba格式</td>\n<td></td>\n</tr>\n<tr>\n<td>iconColor</td>\n<td>Stirng</td>\n<td>N</td>\n<td>&quot;rgba(200,200,200,1)&quot;</td>\n<td>下拉刷新图标主色,必须为rgba格式</td>\n<td></td>\n</tr>\n<tr>\n<td>bounceTop</td>\n<td>Boolean</td>\n<td>N</td>\n<td>true</td>\n<td>是否启用下拉刷新</td>\n<td></td>\n</tr>\n<tr>\n<td>speed</td>\n<td>Number</td>\n<td>N</td>\n<td>30</td>\n<td>数据滚动速度，0-100，数字越大滚动越快，并且滚动越久</td>\n<td></td>\n</tr>\n<tr>\n<td>pullDis</td>\n<td>Number</td>\n<td>N</td>\n<td>60</td>\n<td>触发下拉刷新的高度,当bounceTop为true才起作用，如果传0将自动获取下拉刷新图标内容的高度</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id="方法">方法</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>参数</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>init</td>\n<td>(value)</td>\n<td>value为字日期字符串，如2010/10/10</td>\n<td></td>\n</tr>\n<tr>\n<td>refresh</td>\n<td>无</td>\n<td>数据有更新时调用，下刷新结束时也必须调用</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id="事件">事件</h3>\n<table>\n<thead>\n<tr>\n<th>名字</th>\n<th>参数</th>\n<th>说明</th>\n<th>版本要求</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>@scroll</td>\n<td>obj</td>\n<td>滚动的最大值，和当月的最大滚动值</td>\n<td></td>\n</tr>\n<tr>\n<td>@refresh</td>\n<td>无</td>\n<td>下拉到触发下拉刷新时触发</td>\n<td></td>\n</tr>\n<tr>\n<td>@pull</td>\n<td>postionY</td>\n<td>下拉的距离, 下拉的时候触发</td>\n<td></td>\n</tr>\n</tbody></table>\n'},1269:function(t,n,d){"use strict";var e=d(1055);d.n(e).a},1301:function(t,n,d){"use strict";d.d(n,"a",(function(){return e})),d.d(n,"b",(function(){return o}));var e=function(){var t=this.$createElement,n=this._self._c||t;return n("itv-container",{staticClass:"doc-page"},[n("div",{domProps:{innerHTML:this._s(this.doc)}}),this._v(" "),n("div",{staticClass:"phone-show"})])},o=[]},912:function(t,n,d){"use strict";d.r(n);var e=d(1301),o=d(1053);for(var r in o)"default"!==r&&function(t){d.d(n,t,(function(){return o[t]}))}(r);d(1269);var i=d(0),a=Object(i.a)(o.default,e.a,e.b,!1,null,"a93befb6",null);n.default=a.exports}}]);